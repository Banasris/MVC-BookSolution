@model IPagedList<BookSearchViewModel>
@{
    ViewBag.Title = "Search";
}
<h2>Search</h2>

<div id="Books">
    @*<div class="pagedList" data-book-target="#BookSearch">
        @Html.PagedListPager(Model, Page => Url.Action("Index", new{Page}),
        PagedListRenderOptions.ClassicPlusFirstAndLast)
    </div>*@

    @if(!string.IsNullOrEmpty(ViewBag.CurrentFilter)){
     <div class="pagedList" data-choosebook-target="#Books">
         @Html.PagedListPager(Model, Page => Url.Action("Index", new{Page, 
                                                                SearchTerm=ViewBag.CurrentFilter,
                                                                }),
        PagedListRenderOptions.ClassicPlusFirstAndLast)
         
    </div>
    }
    else
    {
    <div class="pagedList" data-choosebook-target="#Books">
         @Html.PagedListPager(Model, Page => Url.Action("Genre", new{Page, 
                                                                genreName=ViewBag.CurrentGenre,
                                                                }),
        PagedListRenderOptions.ClassicPlusFirstAndLast)
         
   </div>
    }

    @foreach (var item in Model)
    {
            @:<div class="row">
            <div class="col-xs-1">
                <a href="@Url.Action("Image", "Home", new { idOfBook = item.id})">
                    <img src="data:image;base64,@System.Convert.ToBase64String(item.picture)" width="110" height="80" class="thumbnail img-responsive"/>
                </a>
            </div>
            <div class="col-xs-11">
                <div>
                    <h4>@item.title</h4>
                </div>
                <div> 
                    <b>by:</b> @item.name
                </div>
                <div> 
                    <b>Publisher:</b> @item.publisher
                </div>
            </div>
        @:</div> 
            <hr />
    }
</div>

